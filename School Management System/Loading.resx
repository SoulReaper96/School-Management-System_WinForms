<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAABGdBTUEAALGPC/xhBQAAA45JREFUeF7t
        0VtqHEEQRFHt3EvxUv1ALjDm2A5Joema6jxwQT8xJTpfxhhjjD18/dGX1z/HaX4e99uv5siH+f24c+TD
        6LirOfKT+9dxV3PkJ5UcdzVHfjJvOe5qjvwk3nPc1Rx5cx857mqOvKnGcVdz5M00j7uaI2/iM467miNf
        7DOPu5ojX+QRx13NkR/skcddzZEf5IrjrubIn+zK467myJ9kh+Ou5shlOx13NUcu2fG4qznyB+183NUc
        +Z2e4birOfIbPdNxV3Pk0DMedzVH/o9nPu5qjvwXJxx3NUf+w0nHXc2RfznxuKvbH/nk465ue+Q7HHd1
        yyPrQ5zc7egjnNzt6COc3O3oI5zc7egjnNzt6COc3O3oI5zc7egjnNzt6COc3O3oI5zc7egjnNzt6COc
        3Pb0T0/XVadHpuuq0yPTddXpkem66vTIdF11emS6rjo9Ml1XnR6ZrqtOj0zXVadHpuuq0yMqpe3JpbRV
        dXpEpbQ9uZS2qk6PqJS2J5fSVtXpEZXS9uRS2qo6PaJS2p5cSltVp0dUStt2KW3bpbRVdXpEpbRtl9K2
        XUpbVadHVErbdilt26W0VXV6RKW0bZfStl1KW1WnR1RK23YpbdultFV1ekSltG2X0rZdSltVp0dUStt2
        KW3bpbRVdXpEpbRtl9K2XUpbVadHVErbdilt26W0VXV6RKW0bZfStl1KW1WnR1RK23YpbdultFV1ekSl
        tG2X0rZdSltVp0dUStt2KW3bpbRVdXpEpbRtl9K2XUpbVadHVErbdilt26W0VXV6RKW0bZfStl1KW1Wn
        R1RK23YpbdultFV1ekSltG2X0rZdSltVp0dUStt2KW3bpbRVdXpEpbRtl9K2XUpbVadHVErbdilt26W0
        VXV6RKW0bZfStl1KW1WnR1RK23YpbdultFV1ekSltG2X0rZdSltVp0dUStt2KW3bpbRVdXpEpbRtl9K2
        XUpbVadHVErbdilt26W0VXV6RKW0bZfStl1KW1WnR1RK23YpbdultFV1ekSltG2X0rZdSltVp0dUStt2
        KW3bpbRVdXpEpbRtl9K2XUpbVadHVErbdilt26W0VXV6RKW0bZfStl1KW1WnR1RK23YpbdultFUfoh+c
        9i+m8bR/MY2n/YtpPO1fTONp/2IaT/sX03jav5jG0/7FNJ72L6bxtH9jjDHGGGOMMcYYY4wxxhhjjPHq
        5eU7BSSVcDhjcsoAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="LoadingTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>